[
  {
    "id": "1493418924169879553",
    "name": "Spring Boot",
    "description": "orm:MybatisPlus dbType:MySQL",
    "projectType": 2,
    "fileTemplateList": [
      {
        "name": "pom.xml",
        "path": "pom.xml",
        "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n\n    <parent>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-parent</artifactId>\n        <version>2.1.6.RELEASE</version>\n    </parent>\n\n    <groupId>${maven.groupId}</groupId>\n    <artifactId>${maven.artifactId}</artifactId>\n    <version>${maven.version}</version>\n    <packaging>jar</packaging>\n\n    <properties>\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n        <java.version>1.8</java.version>\n    </properties>\n\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-web</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>com.baomidou</groupId>\n            <artifactId>mybatis-plus-boot-starter</artifactId>\n            <version>3.2.0</version>\n        </dependency>\n        <dependency>\n            <groupId>mysql</groupId>\n            <artifactId>mysql-connector-java</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.projectlombok</groupId>\n            <artifactId>lombok</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>io.springfox</groupId>\n            <artifactId>springfox-swagger-ui</artifactId>\n            <version>2.7.0</version>\n        </dependency>\n        <dependency>\n            <groupId>io.springfox</groupId>\n            <artifactId>springfox-swagger2</artifactId>\n            <version>2.7.0</version>\n        </dependency>\n        <dependency>\n            <groupId>com.alibaba</groupId>\n            <artifactId>druid</artifactId>\n            <version>1.0.5</version>\n        </dependency>\n        <dependency>\n            <groupId>com.alibaba</groupId>\n            <artifactId>fastjson</artifactId>\n            <version>1.2.45</version>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-test</artifactId>\n            <scope>test</scope>\n        </dependency>\n    </dependencies>\n\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-maven-plugin</artifactId>\n            </plugin>\n        </plugins>\n    </build>\n\n</project>\n",
        "type": 1
      },
      {
        "name": "Application.java",
        "path": "src/main/java/${basePackageDir}/Application.java",
        "content": "package ${basePackage};\n\nimport org.mybatis.spring.annotation.MapperScan;\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.boot.context.properties.EnableConfigurationProperties;\nimport org.springframework.cache.annotation.EnableCaching;\nimport org.springframework.transaction.annotation.EnableTransactionManagement;\n\n@SpringBootApplication\n@MapperScan(\"${basePackage}.dao\")\npublic class Application {\n\n    public static void main(String[] args) {\n        SpringApplication.run(Application.class, args);\n    }\n}\n",
        "type": 1
      },
      {
        "name": "application.yml",
        "path": "src/main/resources/application.yml",
        "content": "spring:\n  datasource:\n    url: jdbc:mysql://${dataSource.host}:${dataSource.port?c}/${dataSource.database}?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&useSSL=false&serverTimezone=GMT%2B8\n    username: ${dataSource.username}\n    password: ${dataSource.password}\n    hikari:\n      minimum-idle: 5\n      maximum-pool-size: 100\n      idle-timeout: 30000\n      validation-timeout: 250\n      max-lifetime: 1800000\n      connection-timeout: 30000\n      connection-test-query: SELECT 1\n  jackson:\n    date-format: yyyy-MM-dd HH:mm:ss\n    time-zone: GMT+8\n",
        "type": 1
      },
      {
        "name": "Swagger2Config.java",
        "path": "src/main/java/${basePackageDir}/config/Swagger2Config.java",
        "content": "package ${basePackage+'.config'};\n\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport springfox.documentation.builders.ApiInfoBuilder;\nimport springfox.documentation.builders.RequestHandlerSelectors;\nimport springfox.documentation.service.ApiInfo;\nimport springfox.documentation.spi.DocumentationType;\nimport springfox.documentation.spring.web.plugins.Docket;\nimport springfox.documentation.swagger2.annotations.EnableSwagger2;\n\n/**\n * Swagger配置\n */\n@Configuration\n@EnableSwagger2\npublic class Swagger2Config {\n    @Bean\n    public Docket docket() {\n        return new Docket(DocumentationType.SWAGGER_2)\n                .apiInfo(apiInfo())\n                .select()\n                .apis(RequestHandlerSelectors.basePackage(\"${basePackage+'.controller'}\"))\n                .build();\n    }\n\n    private ApiInfo apiInfo() {\n        return new ApiInfoBuilder()\n                .title(\"${maven.artifactId} API文档\")\n                .description(\"${maven.artifactId} API文档\")\n                .version(\"${maven.version}\")\n                .build();\n    }\n}\n",
        "type": 1
      },
      {
        "name": "model",
        "path": "src/main/java/${basePackageDir}/model/${table.upperCamelName}.java",
        "content": "package ${basePackage}.model;\n\nimport lombok.Data;\nimport com.baomidou.mybatisplus.annotation.TableName;\nimport com.baomidou.mybatisplus.annotation.TableId;\nimport com.baomidou.mybatisplus.annotation.TableField;\n<#assign columns=table.columns />\n\n<#list columns as column>\n<#if !importedDate?? && column.javaTypeClass.simpleName=='Date'>\nimport java.util.Date;\n<#assign importedDate=true />\n</#if>\n</#list>\n/**\n* ${table.remarks}\n*/\n@Data\n@TableName(\"${table.tableName}\")\npublic class ${table.upperCamelName} {\n<#list columns as column>\n    /**\n    * ${column.remarks}\n    */\n    <#if column.primaryKey>\n    @TableId\n    </#if>\n    @TableField(\"${column.columnName}\")\n    private ${column.javaTypeClass.simpleName} ${column.lowerCamelName};\n</#list>\n}",
        "type": 2
      },
      {
        "name": "Mapper",
        "path": "src/main/java/${basePackageDir}/dao/${table.upperCamelName}Mapper.java",
        "content": "package ${basePackage}.dao;\n\nimport com.baomidou.mybatisplus.core.mapper.BaseMapper;\nimport ${basePackage}.model.${table.upperCamelName};\n\n/**\n * ${table.remarks}\n */\npublic interface ${table.upperCamelName}Mapper extends BaseMapper<${table.upperCamelName}> {\n\n}",
        "type": 2
      },
      {
        "name": "Service",
        "path": "src/main/java/${basePackageDir}/service/${table.upperCamelName}Service.java",
        "content": "package ${basePackage}.service;\n\nimport com.baomidou.mybatisplus.extension.service.IService;\nimport com.baomidou.mybatisplus.core.metadata.IPage;\nimport ${basePackage}.model.${table.upperCamelName};\n\n/**\n * ${table.remarks}\n */\npublic interface ${table.upperCamelName}Service extends IService<${table.upperCamelName}> {\n\n<#list table.columns as column>\n    <#if column.primaryKey>\n    /**\n     * 通过ID查询单个${table.remarks}\n     *\n     * @param id ID\n     * @return {@link ${table.upperCamelName}}\n     */\n     ${table.upperCamelName} findById(${column.javaTypeClass.simpleName} id);\n\n    /**\n     * 分页查询${table.remarks}\n     *\n     * @param pageNum   页号\n     * @param pageSize 每页大小\n     * @return {@link ${table.upperCamelName}}\n     */\n     IPage<${table.upperCamelName}> findByPage(int pageNum, int pageSize);\n\n    /**\n     * 新增${table.remarks}\n     *\n     * @param ${table.lowerCamelName} ${table.upperCamelName}\n     */\n    void insert(${table.upperCamelName} ${table.lowerCamelName});\n\n    /**\n     * 修改${table.remarks}\n     *\n     * @param ${table.lowerCamelName} ${table.upperCamelName}\n     */\n    void update(${table.upperCamelName} ${table.lowerCamelName});\n\n    /**\n     * 通过ID删除单个${table.remarks}\n     *\n     * @param id ID\n     */\n    void deleteById(${column.javaTypeClass.simpleName} id);\n    </#if>\n</#list>\n\n}",
        "type": 2
      },
      {
        "name": "ServiceImpl",
        "path": "src/main/java/${basePackageDir}/service/impl/${table.upperCamelName}ServiceImpl.java",
        "content": "package ${basePackage}.service.impl;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport com.baomidou.mybatisplus.core.metadata.IPage;\nimport com.baomidou.mybatisplus.extension.plugins.pagination.Page;\nimport org.springframework.stereotype.Service;\nimport com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;\nimport ${basePackage}.model.${table.upperCamelName};\nimport ${basePackage}.dao.${table.upperCamelName}Mapper;\nimport ${basePackage}.service.${table.upperCamelName}Service;\n\n@Service\npublic class ${table.upperCamelName}ServiceImpl extends ServiceImpl<${table.upperCamelName}Mapper, ${table.upperCamelName}> implements ${table.upperCamelName}Service{\n\n<#list table.columns as column>\n    <#if column.primaryKey>\n    @Autowired\n    private ${table.upperCamelName}Mapper ${table.lowerCamelName}Mapper;\n\n    @Override\n    public ${table.upperCamelName} findById(${column.javaTypeClass.simpleName} id){\n        return ${table.lowerCamelName}Mapper.selectById(id);\n    }\n\n    @Override\n    public IPage<${table.upperCamelName}> findByPage(int pageNum, int pageSize) {\n        return ${table.lowerCamelName}Mapper.selectPage(new Page<>(pageNum, pageSize), null);\n    }\n\n    @Override\n    public void insert(${table.upperCamelName} ${table.lowerCamelName}){\n        ${table.lowerCamelName}Mapper.insert(${table.lowerCamelName});\n    }\n\n    @Override\n    public void update(${table.upperCamelName} ${table.lowerCamelName}){\n        ${table.lowerCamelName}Mapper.updateById(${table.lowerCamelName});\n    }\n\n    @Override\n    public void deleteById(${column.javaTypeClass.simpleName} id){\n        ${table.lowerCamelName}Mapper.deleteById(id);\n    }\n    </#if>\n</#list>\n\n}",
        "type": 2
      },
      {
        "name": "Controller",
        "path": "src/main/java/${basePackageDir}/controller/${table.upperCamelName}Controller.java",
        "content": "package ${basePackage}.controller;\n\nimport io.swagger.annotations.Api;\nimport io.swagger.annotations.ApiOperation;\nimport io.swagger.annotations.ApiParam;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport com.baomidou.mybatisplus.core.metadata.IPage;\nimport org.springframework.web.bind.annotation.DeleteMapping;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.PathVariable;\nimport org.springframework.web.bind.annotation.PostMapping;\nimport org.springframework.web.bind.annotation.PutMapping;\nimport org.springframework.web.bind.annotation.RequestBody;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RequestParam;\nimport org.springframework.web.bind.annotation.RestController;\nimport ${basePackage}.model.${table.upperCamelName};\nimport ${basePackage}.service.${table.upperCamelName}Service;\n\n<#list table.columns as column>\n<#if column.primaryKey>\n/**\n * ${table.remarks}\n */\n@RestController\n@RequestMapping(\"/${table.lowerCamelName}\")\n@Api(tags = \"${table.remarks}\")\npublic class ${table.upperCamelName}Controller {\n    @Autowired\n    private ${table.upperCamelName}Service ${table.lowerCamelName}Service;\n\n    @GetMapping(\"/{id}\")\n    @ApiOperation(\"通过ID查询单个${table.remarks}\")\n    public ${table.upperCamelName} findById(@ApiParam(\"ID\") @PathVariable(\"id\") ${column.javaTypeClass.simpleName} id) {\n        return ${table.lowerCamelName}Service.findById(id);\n    }\n\n    @GetMapping\n    @ApiOperation(\"分页查询${table.remarks}\")\n    public IPage<${table.upperCamelName}> findByPage(@ApiParam(\"页号\") @RequestParam(defaultValue = \"1\") Integer pageNum,\n                                                @ApiParam(\"每页大小\") @RequestParam(defaultValue = \"10\") Integer pageSize) {\n        return ${table.lowerCamelName}Service.findByPage(pageNum, pageSize);\n    }\n\n    @PostMapping\n    @ApiOperation(\"新增${table.remarks}\")\n    public void insert(@RequestBody ${table.upperCamelName} ${table.lowerCamelName}) {\n        ${table.lowerCamelName}Service.insert(${table.lowerCamelName});\n    }\n\n    @PutMapping\n    @ApiOperation(\"修改${table.remarks}\")\n    public void update(@RequestBody ${table.upperCamelName} ${table.lowerCamelName}) {\n        ${table.lowerCamelName}Service.update(${table.lowerCamelName});\n    }\n\n    @DeleteMapping(\"/{id}\")\n    @ApiOperation(\"通过ID删除单个${table.remarks}\")\n    public void deleteById(@ApiParam(\"ID\") @PathVariable(\"id\") ${column.javaTypeClass.simpleName} id) {\n        ${table.lowerCamelName}Service.deleteById(id);\n    }\n}\n    </#if>\n</#list>",
        "type": 2
      }
    ],
    "createTime": "2022-02-15 10:56:29",
    "updateTime": "2022-03-17 09:00:06",
    "createName": "admin",
    "organizationName": "public",
    "organizationId": "1493398775811387393",
    "publicFlag": 1
  }
]